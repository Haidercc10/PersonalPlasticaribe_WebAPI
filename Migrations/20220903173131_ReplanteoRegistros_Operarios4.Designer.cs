// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Personal_PlasticaribeWebAPI.Data;

#nullable disable

namespace Personal_PlasticaribeWebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220903173131_ReplanteoRegistros_Operarios4")]
    partial class ReplanteoRegistros_Operarios4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Area", b =>
                {
                    b.Property<int>("Area_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Area_Id"), 1L, 1);

                    b.Property<string>("Area_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Area_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Area_Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Estado", b =>
                {
                    b.Property<int>("Estado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Estado_Id"), 1L, 1);

                    b.Property<string>("Estado_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Estado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TpEstado_Id")
                        .HasColumnType("int");

                    b.HasKey("Estado_Id");

                    b.HasIndex("TpEstado_Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Registro_Operario", b =>
                {
                    b.Property<long>("RegOpe_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RegOpe_Id"), 1L, 1);

                    b.Property<DateTime>("RegOpe_Fecha")
                        .HasColumnType("date");

                    b.Property<int>("Turno_Id")
                        .HasColumnType("int");

                    b.Property<long>("Usu_Id")
                        .HasColumnType("bigint");

                    b.HasKey("RegOpe_Id");

                    b.HasIndex("Turno_Id");

                    b.HasIndex("Usu_Id");

                    b.ToTable("Registros_Operarios");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Tipo_Identificacion", b =>
                {
                    b.Property<string>("TipoIdent_Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TipoIdent_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TipoIdent_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipoIdent_Id");

                    b.ToTable("Tipos_Identificaciones");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Tipo_Registro", b =>
                {
                    b.Property<int>("TpReg_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpReg_Id"), 1L, 1);

                    b.Property<string>("TpReg_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TpReg_Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TpReg_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Turno_Id")
                        .HasColumnType("int");

                    b.HasKey("TpReg_Id");

                    b.HasIndex("Turno_Id");

                    b.ToTable("Tipos_Registros");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Tipo_Usuario", b =>
                {
                    b.Property<int>("TipoUsu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoUsu_Id"), 1L, 1);

                    b.Property<string>("TipoUsu_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TipoUsu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TipoUsu_Id");

                    b.ToTable("Tipos_Usuarios");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Tipos_Estados", b =>
                {
                    b.Property<int>("TpEstado_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TpEstado_Id"), 1L, 1);

                    b.Property<string>("TpEstado_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("TpEstado_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("TpEstado_Id");

                    b.ToTable("Tipos_Estados");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Turno", b =>
                {
                    b.Property<int>("Turno_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Turno_Id"), 1L, 1);

                    b.Property<string>("Turno_Descripcion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Turno_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Turno_Id");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Usuarios", b =>
                {
                    b.Property<long>("Usu_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Area_Id")
                        .HasColumnType("int");

                    b.Property<int>("Estado_Id")
                        .HasColumnType("int");

                    b.Property<string>("TipoIdent_Id")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TipoUsu_Id")
                        .HasColumnType("int");

                    b.Property<int>("Usu_Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Usu_Codigo"), 1L, 1);

                    b.Property<string>("Usu_Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Usu_Id");

                    b.HasIndex("Area_Id");

                    b.HasIndex("Estado_Id");

                    b.HasIndex("TipoIdent_Id");

                    b.HasIndex("TipoUsu_Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Estado", b =>
                {
                    b.HasOne("Personal_PlasticaribeWebAPI.Models.Tipos_Estados", "Tipo_Estado")
                        .WithMany()
                        .HasForeignKey("TpEstado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tipo_Estado");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Registro_Operario", b =>
                {
                    b.HasOne("Personal_PlasticaribeWebAPI.Models.Turno", "Turnos")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Personal_PlasticaribeWebAPI.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Turnos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Tipo_Registro", b =>
                {
                    b.HasOne("Personal_PlasticaribeWebAPI.Models.Turno", "Turnos")
                        .WithMany()
                        .HasForeignKey("Turno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Personal_PlasticaribeWebAPI.Models.Usuarios", b =>
                {
                    b.HasOne("Personal_PlasticaribeWebAPI.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Personal_PlasticaribeWebAPI.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Estado_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Personal_PlasticaribeWebAPI.Models.Tipo_Identificacion", "TipoIdent")
                        .WithMany()
                        .HasForeignKey("TipoIdent_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Personal_PlasticaribeWebAPI.Models.Tipo_Usuario", "TipoUsu")
                        .WithMany()
                        .HasForeignKey("TipoUsu_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Estado");

                    b.Navigation("TipoIdent");

                    b.Navigation("TipoUsu");
                });
#pragma warning restore 612, 618
        }
    }
}
